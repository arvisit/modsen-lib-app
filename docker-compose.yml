x-eureka-variables: &eureka-variables
  EUREKA_HOSTNAME: discovery-server
  EUREKA_PORT: 8070

x-cors-variables: &cors-variables
  CORS_ALLOWED_HEADER: '*'
  CORS_ALLOWED_METHOD: '*'
  CORS_ALLOWED_ORIGIN: '*'

services:
  book-service:
    build: modsen-book-service
    image: modsen-book-service
    container_name: book-service
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      DB_URL: jdbc:postgresql://db-book-service:5432/book-service-db
      DB_USERNAME: postgres
      DB_PASSWORD: root
      <<: [*eureka-variables, *cors-variables]
    ports:
      - 8081:8081
    networks:
      - lib_app_network
    depends_on:
      db-book-service:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      security-service:
        condition: service_healthy

  db-book-service:
    image: postgres:15-alpine
    container_name: db-book-service
    restart: always
    healthcheck:
      test: pg_isready -U postgres -d book-service-db
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: book-service-db
    ports:
      - 5432:5432
    expose:
      - 5432
#    volumes:
#      - pgdata:/var/lib/postgresql/data
    networks:
      - lib_app_network

  security-service:
    build: modsen-security-service
    image: modsen-security-service
    container_name: security-service
    restart: always
    healthcheck:
      test: wget -qO- http://localhost:8080/actuator/health
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
      DB_URL: jdbc:postgresql://db-security-service:5432/security-service-db
      DB_USERNAME: postgres
      DB_PASSWORD: root
      JWT_SECRET: cofZUlayEW6vaGKwVDt5uNzr4vNWUg1F1BiPQe_EShfo4fT6oea1JzkYTpqT27pC
      <<: [*eureka-variables, *cors-variables]
    ports:
      - 8082:8082
    networks:
      - lib_app_network
    depends_on:
      db-security-service:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy

  db-security-service:
    image: postgres:15-alpine
    container_name: db-security-service
    restart: always
    healthcheck:
      test: pg_isready -U postgres -d security-service-db
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: security-service-db
    ports:
      - 5431:5432
    expose:
      - 5432
#    volumes:
#      - pgdata:/var/lib/postgresql/data
    networks:
      - lib_app_network

  config-server:
    build: modsen-config-server
    image: modsen-config-server
    container_name: config-server
    restart: always
    healthcheck:
      test: wget -qO- http://localhost:8071/actuator/health
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      <<: *eureka-variables
    ports:
      - 8071:8071
    networks:
      - lib_app_network
    depends_on:
      discovery-server:
        condition: service_healthy

  discovery-server:
    image: modsen-discovery-server
    build: modsen-discovery-server
    container_name: discovery-server
    restart: always
    healthcheck:
      test: wget -qO- http://localhost:8070/actuator/health
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 8070:8070
    networks:
      - lib_app_network

#volumes:
#  pgdata:

networks:
  lib_app_network:
